name: Neovim Plugin CI/CD

on:
  workflow_call:
    secrets:
      RELEASE_TOKEN:
        description: "GitHub PAT for creating the release PRs so that they trigger GitHub Actions"
        required: true
      NETLIFY_TOKEN:
        description: "Netlify API token for deploying documentation"
        required: true
      NETLIFY_SITE_ID:
        description: "Netlify site ID for deploying documentation"
        required: true
    inputs:
      plugin_name:
        description: "Name of the neovim plugin"
        required: true
        type: string
      is_production:
        description: "Whether or not to perform production tasks"
        default: false
        required: false
        type: boolean
      docs:
        description: "Whether or not to build and deploy"
        default: true
        required: false
        type: boolean

jobs:
  style:
    name: Stylua Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: JohnnyMorganz/stylua-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --check .
  lint:
    name: Luacheck Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: lunarmodules/luacheck@v1
  vimdoc:
    name: Generate Vimdoc
    runs-on: ubuntu-latest
    needs:
      - style
      - lint
    if: ${{ inputs.is_production && inputs.docs }}
    steps:
      - uses: actions/checkout@v3
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: ${{ inputs.plugin_name }}
          version: "Neovim >= 0.9.0"
          demojify: true
          treesitter: true
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore(build): auto-generate vimdoc"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
  docs:
    name: Generate Lua API
    runs-on: ubuntu-latest
    if: ${{ inputs.docs }}
    needs:
      - style
      - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Lua
        uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: 5.4
      - name: Install LDoc
        uses: leafo/gh-actions-luarocks@v4
      - name: Setup dependencies
        run: luarocks install ldoc
      - name: Build Docs
        run: |
          ldoc .
      - name: Deploy
        uses: nwtgck/actions-netlify@v2.0
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          publish-dir: docs
          production-deploy: ${{ inputs.is_production }}
  release:
    name: Release Please
    runs-on: ubuntu-latest
    if: ${{ inputs.is_production }}
    needs:
      - docs
      - vimdoc
      - style
      - lint
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          release-type: simple
          package-name: ${{ inputs.plugin_name }}
      - uses: actions/checkout@v3
      - uses: rickstaa/action-create-tag@v1
        if: ${{ steps.release.outputs.release_created }}
        with:
          tag: stable
          message: "Current stable release: ${{ steps.release.outputs.tag_name }}"
          tag_exists_error: false
          force_push_tag: true
